[gd_scene load_steps=4 format=2]

[ext_resource path="res://Assets/Art/Export/Objects/Book.png" type="Texture" id=1]
[ext_resource path="res://Throwable.tscn" type="PackedScene" id=2]

[sub_resource type="GDScript" id=1]

script/source = "extends CanvasItem

# class member variables go here, for example:
# var a = 2
# var b = \"textva
export(int) var throwSpeed = 500

var held = false
var holdPoint
var player

func _ready():
	# Called every time the node is added to the scene.
	# Initialization here
	$Interactable.connect(\"interacted\", self, \"_interacted\")
	
func _interacted():
	player = get_tree().get_nodes_in_group(\"player\")[0]
	var xform = get_parent().global_transform
	
	get_parent().get_parent().remove_child(get_parent())
	player.add_child(get_parent())
	
	get_parent().global_transform = xform
	holdPoint = player.find_node(\"HoldPoint\")
	
	held = true
	
	$Interactable.interactable = false
	get_parent().mode = RigidBody2D.MODE_KINEMATIC
	
func _process(delta):
	if held:
		get_parent().global_rotation_degrees = 0
		get_parent().position = holdPoint.position
		get_parent().position.x *= -1 if player.flipped else 1
		get_parent().scale.x = -1 if player.flipped else 1
		update()
		
		if Input.is_action_just_pressed(\"interact\"):
			throw()
			
func _draw():
	if held:
		var v = throw_vector() * 20
		if player.flipped:
			v.x = -v.x
			
		draw_line(Vector2(0, 0), v, Color(\"#ff8888\"), 2, true)
	
func throw_vector():
	var mousePos = player.get_local_mouse_position()
	mousePos = mousePos - get_parent().position
	return mousePos.normalized()
	
func throw():
	var vec = throw_vector() * throwSpeed
	
	var xf = get_parent().global_transform
	var scene = get_tree().current_scene
	
	get_parent().get_parent().remove_child(get_parent())
	scene.add_child(get_parent())
	
	held = false
	$Interactable.interactable = true
	
	get_parent().global_transform = xf
	get_parent().mode = RigidBody2D.MODE_RIGID
	get_parent().linear_velocity = vec
	

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass
"

[node name="Thrown Book" type="RigidBody2D"]

position = Vector2( 250, 572 )
input_pickable = false
collision_layer = 4
collision_mask = 5
mode = 0
mass = 1.0
friction = 1.0
bounce = 0.2
gravity_scale = 1.0
custom_integrator = false
continuous_cd = 2
contacts_reported = 0
contact_monitor = false
sleeping = false
can_sleep = true
linear_velocity = Vector2( -200, 20 )
linear_damp = -1.0
angular_velocity = 15.0
angular_damp = -1.0
_sections_unfolded = [ "Angular", "Collision", "Linear", "Transform" ]
__meta__ = {
"_edit_group_": true
}

[node name="Book" type="Sprite" parent="." index="0"]

texture = ExtResource( 1 )
_sections_unfolded = [ "Transform" ]

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="." index="1"]

build_mode = 0
polygon = PoolVector2Array( -5, -6, 5, -6, 5, 6, -5, 6 )

[node name="Throwable" parent="." index="2" instance=ExtResource( 2 )]

script = SubResource( 1 )

[node name="IndicatorPosition" parent="Throwable/Interactable" index="0"]

position = Vector2( -4, -21 )

[node name="Indicator" parent="Throwable/Interactable/IndicatorPosition" index="0"]

margin_left = -32.0
margin_top = -32.0
margin_right = -16.0
margin_bottom = -18.0

[node name="Collision" parent="Throwable/Interactable" index="1"]

polygon = PoolVector2Array( -7, -9, 7, -9, 7, 7, -7, 7 )


[editable path="Throwable"]
[editable path="Throwable/Interactable"]
